{"version":3,"sources":["components/Input.js","components/Filter.js","components/Form.js","components/Notification.js","serverLogic.js","components/App.js","index.js"],"names":["text","value","setFn","onChange","e","target","props","Input","handleSubmit","newName","newNumber","setNewName","setNewNumber","onSubmit","type","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","getAll","a","Axios","get","res","data","postPerson","newPerson","post","putPerson","id","person","put","App","useState","persons","setPersons","filter","setFilter","setMessage","useEffect","then","response","showMessage","setTimeout","handleDelete","window","confirm","delete","deletePerson","catch","err","Notification","Filter","Form","event","preventDefault","find","name","number","changedPerson","map","p","error","toLowerCase","includes","key","onClick","bind","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f11a00a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default ({ text, value, setFn }) => {\r\n    \r\n    return (\r\n        <div>\r\n            {text} <input value={value} onChange={(e) => setFn(e.target.value)} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Input from './Input'\r\n\r\nexport default props => {\r\n\r\n    return (\r\n        <div>\r\n            <Input {...props} />\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport Input from './Input'\r\n\r\nexport default ({ handleSubmit, newName, newNumber, setNewName, setNewNumber }) => {\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <Input text=\"name:\" value={newName} setFn={setNewName} />\r\n                <Input text=\"number:\" value={newNumber} setFn={setNewNumber} />\r\n\r\n                <button type=\"submit\">add</button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default ({ message }) => {\r\n\r\n    const messageStyles = {\r\n        color: 'red',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n\r\n    if (message === null)\r\n        return null\r\n\r\n    return <div style={messageStyles}>\r\n        {message}\r\n    </div>\r\n}","import Axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nexport const getAll = async () => {\r\n    const res = await Axios.get(baseUrl)\r\n    return res.data\r\n}\r\n\r\nexport const postPerson = async (newPerson) => {\r\n    const res = await Axios.post(baseUrl, newPerson)\r\n    return res.data\r\n}\r\n\r\nexport const deletePerson = (id) => {\r\n    return Axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nexport const putPerson = async (id, person) => {\r\n    const res = await Axios.put(`${baseUrl}/${id}`, person)\r\n    return res.data\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Filter from './Filter'\r\nimport Form from './Form'\r\nimport Notification from './Notification'\r\n\r\n\r\nimport { getAll, postPerson, deletePerson, putPerson } from '../serverLogic'\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filter, setFilter] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getAll()\r\n            .then(response => setPersons(response))\r\n    }, [])\r\n\r\n    const showMessage = message => {\r\n        setMessage(message)\r\n\r\n        setTimeout(() => {\r\n            setMessage(null)\r\n        }, 3000)\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        const person = persons.find(person => person.name === newName)\r\n\r\n        if (person) {\r\n            if (!window.confirm(`Name ${newName} already exists, replace with a new number?`)) {\r\n                showMessage('Update canceled!')\r\n                return\r\n            } else {\r\n                putPerson(person.id, { ...person, number: newNumber })\r\n                    .then(changedPerson => {\r\n                        setPersons(persons.map(p => p.id !== person.id ? p : changedPerson))\r\n                        showMessage('Phone number updated')\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.data.error)\r\n                            showMessage(error.response.data.error)\r\n                        else\r\n                            showMessage('Something went wrong')\r\n                    })\r\n\r\n            }\r\n        } else {\r\n            postPerson({ name: newName, number: newNumber })\r\n                .then(response => {\r\n                    setPersons([...persons, response])\r\n                    showMessage('New person added')\r\n                })\r\n                .catch(error => {\r\n\r\n                    if (error.response.data.error)\r\n                        showMessage(error.response.data.error)\r\n                    else\r\n                        showMessage('Something went wrong')\r\n                })\r\n\r\n        }\r\n\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n    const handleDelete = id => {\r\n        if (!window.confirm('Sure about eliminating a real person?')) {\r\n            showMessage('Deletion canceled!')\r\n            return\r\n        }\r\n        deletePerson(id).catch(err => showMessage('An error occured!'))\r\n\r\n        setPersons(persons.filter(person => person.id !== id))\r\n        showMessage('Deletion successful!')\r\n    }\r\n\r\n    const filterFolks = () => {\r\n        return persons.filter(person =>\r\n            person.name.toLowerCase().includes(filter.toLowerCase()))\r\n            .map(person => <p key={person.id}>\r\n                {person.name} {person.number} <button onClick={handleDelete.bind(this, person.id)}>delete</button>\r\n            </p>)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Phonebook</h2>\r\n            {message && <Notification message={message} />}\r\n            <Filter text=\"filter shown with:\" value={filter} setFn={setFilter} />\r\n\r\n            <h2>Add a New</h2>\r\n            <Form\r\n                handleSubmit={handleSubmit}\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n                setNewName={setNewName}\r\n                setNewNumber={setNewNumber}\r\n            />\r\n            <h2>Numbers</h2>\r\n            {filterFolks()}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}